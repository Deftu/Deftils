plugins {
    id("java-library")
    id("signing")
    id("maven-publish")
}

group = projectGroup
version = projectVersion
archivesBaseName = projectName

repositories {
    mavenCentral()
}

dependencies {
    implementation("org.jetbrains:annotations:23.0.0")
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.8.2")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.8.2")
}

jar {
    from("LICENSE")
}

java {
    withJavadocJar()
    withSourcesJar()
}

artifacts {
    archives(javadocJar, sourcesJar)
}

test {
    useJUnitPlatform()
}

afterEvaluate {
    publishing {
        publications {
            mavenJava(MavenPublication) {
                groupId = projectGroup
                artifactId = projectName
                version = projectVersion
                from(components["java"])

                pom {
                    name = projectName
                    description = projectDescription
                    url = projectGit

                    licenses {
                        license {
                            name = "GNU LESSER GENERAL PUBLIC LICENSE, Version 3"
                            url = "https://www.gnu.org/licenses/lgpl-3.0.en.html"
                        }
                    }

                    developers {
                        developer {
                            id = "deftu"
                            name = "Deftu"
                            email = "deftudev@gmail.com"
                        }
                    }

                    scm {
                        url = projectGit
                    }
                }
            }
        }

        if (project.hasProperty("publishing.username") && project.hasProperty("publishing.password")) {
            repositories {
                maven {
                    name = "MavenCentral"
                    url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
                    credentials {
                        username = findProperty("publishing.username")
                        password = findProperty("publishing.password")
                    }
                }
            }
        }
    }

    if (project.hasProperty("signing.password")) {
        signing {
            sign(publishing.publications.mavenJava)
            sign(configurations.archives)
        }
    }
}
